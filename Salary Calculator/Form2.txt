using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml; // to be able to use XML
using System.IO;

namespace SAT_Practice
{
	// By: Marella MORAD
	// Last edited: 03 - Jul - 2019

	public partial class Form2 : Form
	{
		string vUsername;
		string vPassword;
		string vConPass;

		public Form2()
		{
			InitializeComponent();
			HideConPass.Visible = false;
			HidePass.Visible = false;
		}

		private void SignUpBtn_Click(object sender, EventArgs e)
		{
			SignUp();
		}

		void SignUp()
		{
			vUsername = UNTextBox.Text;
			vPassword = PassTextBox.Text;
			vConPass = ConPassTextBox.Text;

			SignUpValidation();
		}

		void XmlCheck()
		{
			if (File.Exists("dataBase.xml") == false)
			{
				NewXML();
			}
			else if (File.Exists("dataBase.xml") == true)
			{
				SaveData();
			}
		}

		void SignUpValidation()
		{
			UsernameValidation();
		}

		void UsernameValidation()
		{
			bool UNSpaces = vUsername.Contains(" ");

			bool Found = false;
			if (File.Exists("dataBase.xml") == true)
			{
				XmlDocument xDoc = new XmlDocument(); // to be able to load, edit, add...
				xDoc.Load("dataBase.xml");

				foreach (XmlNode xNode in xDoc.SelectNodes("dataBase/user")) //to run through the xml file
				{
					//check if the username is already taken
					if (xNode.SelectSingleNode("username").InnerText == UNTextBox.Text)
					{
						Found = true;
					}
				}
			}

			if (String.IsNullOrEmpty(vUsername)) // existance check
			{
				MessageBox.Show("Please enter a Username");
			}
			// there is no need for type or range check because the isn't any further calculations
			// it will only be stored in the xml file to be checked later
			else if (UNSpaces == true)
			{
				MessageBox.Show("Spaces aren’t accepted, please retype your username without any spaces");
			}
			else if (Found == true)
			{
				MessageBox.Show("Username already taken, please choose a different one");
			}
			else
			{
				PasswordValidation();
			}
		}

		void PasswordValidation()
		{
			bool PassSpaces = vPassword.Contains(" ");

			if (String.IsNullOrEmpty(vPassword)) // existance check
			{
				MessageBox.Show("Please enter a Password");
			}
			// there is no need for type check because the isn't any further calculations
			else if (vPassword.Length < 6 || vPassword.Length > 8)
			{
				MessageBox.Show("Password should be 6 to 8 characters long");
			}
			else if (PassSpaces == true)
			{
				MessageBox.Show("Spaces aren’t accepted, please retype your password without any spaces");
			}
			else
			{
				ConPassValidation();
			}
		}

		void ConPassValidation()
		{
			bool CPSpaces = vConPass.Contains(" ");

			if (String.IsNullOrEmpty(vConPass)) // existance check
			{
				MessageBox.Show("Please enter a Confirmation Password");
			}
			// there is no need for type check because the isn't any further calculations
			else if (vPassword != vConPass)
			{
				MessageBox.Show("Passwords do NOT match");
			}
			else
			{
				XmlCheck();
				Form3 Login = new Form3();
				Login.Show();
				this.Hide();
			}
		}

		private void ShowPass_Click(object sender, EventArgs e)
		{
			PassTextBox.UseSystemPasswordChar = false;
			HidePass.Visible = true;
			ShowPass.Visible = false;
		}

		private void HidePass_Click(object sender, EventArgs e)
		{
			PassTextBox.UseSystemPasswordChar = true;
			HidePass.Visible = false;
			ShowPass.Visible = true;
		}

		private void ShowConPass_Click(object sender, EventArgs e)
		{
			ConPassTextBox.UseSystemPasswordChar = false;
			HideConPass.Visible = true;
			ShowConPass.Visible = false;
		}

		private void HideConPass_Click(object sender, EventArgs e)
		{
			ConPassTextBox.UseSystemPasswordChar = true;
			HideConPass.Visible = false;
			ShowConPass.Visible = true;
		}

		void NewXML()
		{
			//creates the XML file called dataBase.xml, using a new XmlTextWriter called xWriter
			XmlTextWriter xWriter = new XmlTextWriter("dataBase.xml", Encoding.UTF8);

			xWriter.Formatting = Formatting.Indented; // format the xml to use indentation
			xWriter.WriteStartElement("dataBase");
			xWriter.WriteStartElement("user");
			xWriter.WriteStartElement("username");
			xWriter.WriteString(UNTextBox.Text);
			xWriter.WriteEndElement();
			xWriter.WriteStartElement("password");
			xWriter.WriteString(PassTextBox.Text);
			xWriter.WriteEndElement();
			xWriter.WriteEndElement();
			xWriter.WriteEndElement();

			xWriter.Close(); // to close access to the xml so it can be used by other applications.

			XmlDocument xDoc = new XmlDocument(); // to be able to load, edit, add...
			xDoc.Load("dataBase.xml");

			XmlDeclaration xmldecl; // create a declaration which is the line underneeth
			xmldecl = xDoc.CreateXmlDeclaration("1.0", "UTF-8", null);

			//Insert the XML declaration into the XML file and save
			XmlElement root = xDoc.DocumentElement;
			xDoc.InsertBefore(xmldecl, root); // to insert it before the root element <library>
			xDoc.Save("dataBase.xml");
		}

		void SaveData()
		{
			//load the XML document
			XmlDocument xDoc = new XmlDocument();
			xDoc.Load("dataBase.xml");

			//create the new elements (under the root element)
			XmlNode user = xDoc.CreateElement("user"); //represents a single node/tag in the Xml file 
			XmlNode username = xDoc.CreateElement("username");
			XmlNode password = xDoc.CreateElement("password");

			// Get the value from the textbox and put into the text of the element, save the XML
			username.InnerText = UNTextBox.Text;
			user.AppendChild(username);
			password.InnerText = PassTextBox.Text;
			user.AppendChild(password);
			xDoc.DocumentElement.AppendChild(user);
			xDoc.Save("dataBase.xml");
		}

		private void Form2_FormClosing(object sender, FormClosingEventArgs e)
		{
			DialogResult dialog = MessageBox.Show("Do you really want to close the program?", "Exit", MessageBoxButtons.YesNo);
			if (dialog == DialogResult.Yes)
			{
				Application.ExitThread(); // to exit the program if the user press on the x button
			}
			else if (dialog == DialogResult.No)
			{
				e.Cancel = true;
			}
		}
	}
}
